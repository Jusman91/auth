/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: kurojishi (https://sketchfab.com/kurojishi)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/gundam-unicorn-1410ff9dd1c94807a00b8a0936170196
Title: Gundam Unicorn
*/

import { useGLTF, Text } from '@react-three/drei';
import { Mesh } from 'three';
import { GroupProps } from '@react-three/fiber';
import { getUserInStorage } from '@/lib/utils/storage';

export default function Gundam(props: GroupProps) {
	const { nodes, materials } = useGLTF(
		'/models/gundam-transformed.glb',
	);
	const user = getUserInStorage();
	return (
		<>
			<group
				{...props}
				dispose={null}
				scale={[0.015, 0.015, 0.015]}>
				<Text
					color='gold'
					position={[0, 290, 0]}
					fontSize={10}
					fontWeight={700}>
					{`GU09:[${user?.username.toUpperCase()}]`}
				</Text>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_3 as Mesh).geometry}
					material={materials.blinn20SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_4 as Mesh).geometry}
					material={materials.blinn10SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_9 as Mesh).geometry}
					material={materials.blinn11SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_15 as Mesh).geometry}
					material={materials.blinn12SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_17 as Mesh).geometry}
					material={materials.blinn13SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_21 as Mesh).geometry}
					material={materials.blinn14SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_31 as Mesh).geometry}
					material={materials.blinn16SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_35 as Mesh).geometry}
					material={materials.blinn17SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_42 as Mesh).geometry}
					material={materials.blinn19SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_45 as Mesh).geometry}
					material={materials.blinn1SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_52 as Mesh).geometry}
					material={materials.blinn4SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_53 as Mesh).geometry}
					material={materials.blinn5SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_61 as Mesh).geometry}
					material={materials.blinn7SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_65 as Mesh).geometry}
					material={materials.blinn8SG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_72 as Mesh).geometry}
					material={materials.rhand_other_texSG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_78 as Mesh).geometry}
					material={materials.rhand_white_texSG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_84 as Mesh).geometry}
					material={materials.rleg_other_texSG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
				<mesh
					castShadow
					receiveShadow
					geometry={(nodes.Object_91 as Mesh).geometry}
					material={materials.rleg_white_texSG}
					position={[-80.03, -4.922, 53.503]}
					rotation={[-Math.PI / 2, 0, 0]}
				/>
			</group>
		</>
	);
}

useGLTF.preload('/models/gundam-transformed.glb');
